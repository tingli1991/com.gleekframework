<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Com.GleekFramework.AttributeSdk</name>
    </assembly>
    <members>
        <member name="T:Com.GleekFramework.AttributeSdk.AllowAuthorizeAttribute">
            <summary>
            允许用户授权范围特性
            </summary>
        </member>
        <member name="P:Com.GleekFramework.AttributeSdk.AllowAuthorizeAttribute.VerifyToken">
            <summary>
            是否验证令牌过期
            </summary>
        </member>
        <member name="P:Com.GleekFramework.AttributeSdk.AllowAuthorizeAttribute.VerifyStatus">
            <summary>
            是否验证用户状态(只有验证令牌的的同时才会验证状态)
            </summary>
        </member>
        <member name="T:Com.GleekFramework.AttributeSdk.Attributes.CustomFromQueryAttribute">
            <summary>
            从查询字符串中获取参数，并且该参数为必填项
            </summary>
        </member>
        <member name="P:Com.GleekFramework.AttributeSdk.Attributes.CustomFromQueryAttribute.Name">
            <summary>
            属性名称
            </summary>
        </member>
        <member name="P:Com.GleekFramework.AttributeSdk.Attributes.CustomFromQueryAttribute.BindingSource">
            <summary>
            绑定资源
            </summary>
        </member>
        <member name="M:Com.GleekFramework.AttributeSdk.Attributes.CustomFromQueryAttribute.#ctor(System.Enum)">
            <summary>
            验证失败时的错误消息
            </summary>
            <param name="errorEnum"></param>
        </member>
        <member name="T:Com.GleekFramework.AttributeSdk.CustomRequiredAttribute">
            <summary>
            必填验证
            </summary>
        </member>
        <member name="M:Com.GleekFramework.AttributeSdk.CustomRequiredAttribute.#ctor(System.Enum)">
            <summary>
            验证失败时的错误消息
            </summary>
            <param name="errorEnum"></param>
        </member>
        <member name="T:Com.GleekFramework.AttributeSdk.GlobalExceptionAttribute">
            <summary>
            全局异常过滤器
            </summary>
        </member>
        <member name="M:Com.GleekFramework.AttributeSdk.GlobalExceptionAttribute.OnExceptionAsync(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            发生异常时调用
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Com.GleekFramework.AttributeSdk.ModelValidAttribute">
            <summary>
            模型验证过滤器
            具体的验证规则请参见命名空间：System.ComponentModel.DataAnnotations
            微软官方地址：https://docs.microsoft.com/zh-cn/dotnet/api/system.componentmodel.dataannotations?view=net-5.0
            </summary>
        </member>
        <member name="M:Com.GleekFramework.AttributeSdk.ModelValidAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            方法调用之前出发
            </summary>
            <param name="context">上下文</param>
        </member>
        <member name="M:Com.GleekFramework.AttributeSdk.ModelValidAttribute.GetModelStateErrorDic(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            获取模型验证信息
            </summary>
            <param name="modelState">模型状态</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.AttributeSdk.ModelValidAttribute.ToEnum(System.Type,System.String)">
            <summary>
            枚举转换
            </summary>
            <param name="type">错误类型</param>
            <param name="enumNameOrValue">枚举名称或者枚举值</param>
            <returns></returns>
        </member>
        <member name="T:Com.GleekFramework.AttributeSdk.BaseController">
            <summary>
            基础控制器
            </summary>
        </member>
        <member name="T:Com.GleekFramework.AttributeSdk.ModelValidExtensions">
            <summary>
            模型验证扩展方法
            </summary>
        </member>
        <member name="P:Com.GleekFramework.AttributeSdk.ModelValidExtensions.Type">
            <summary>
            错误信息枚举
            </summary>
        </member>
        <member name="M:Com.GleekFramework.AttributeSdk.ModelValidExtensions.Add``2(Microsoft.AspNetCore.Mvc.Filters.FilterCollection)">
            <summary>
            注入模型验证
            </summary>
            <typeparam name="TFilterType"></typeparam>
            <typeparam name="EnumType"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:Com.GleekFramework.AttributeSdk.NLogMiddlewareExtensions">
            <summary>
            日志收集扩展
            </summary>
        </member>
        <member name="P:Com.GleekFramework.AttributeSdk.NLogMiddlewareExtensions.Level">
            <summary>
            日志级别
            </summary>
        </member>
        <member name="P:Com.GleekFramework.AttributeSdk.NLogMiddlewareExtensions.ExclActionList">
            <summary>
            排除的接口路径配置
            </summary>
        </member>
        <member name="M:Com.GleekFramework.AttributeSdk.NLogMiddlewareExtensions.UseNLogMiddleware(Microsoft.AspNetCore.Builder.IApplicationBuilder,NLog.LogLevel,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Object[])">
            <summary>
            接口日志收集
            </summary>
            <param name="app"></param>
            <param name="level">日志级别</param>
            <param name="isSaveContent">是否保存Content字段</param>
            <param name="exclActionList"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Com.GleekFramework.AttributeSdk.UserAuthExtensions">
            <summary>
            用户认证拓展类
            </summary>
        </member>
        <member name="F:Com.GleekFramework.AttributeSdk.UserAuthExtensions.START_WITH_TOKEN_KEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:Com.GleekFramework.AttributeSdk.UserAuthExtensions.DEFAULT_USER_AUTH_KEY">
            <summary>
            默认的用户授权键
            </summary>
        </member>
        <member name="M:Com.GleekFramework.AttributeSdk.UserAuthExtensions.GetAccessToken(Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            从上下文获取访问令牌
            </summary>
            <param name="contextAccessor">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.AttributeSdk.UserAuthExtensions.GetAccessToken(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            从上下文获取访问令牌
            </summary>
            <param name="httpContext">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.AttributeSdk.UserAuthExtensions.SetUserAuth``1(Microsoft.AspNetCore.Http.HttpContext,``0,System.String)">
            <summary>
            设置授权对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="httpContext"></param>
            <param name="userAuthInfo"></param>
            <param name="userAuthKey"></param>
        </member>
        <member name="M:Com.GleekFramework.AttributeSdk.UserAuthExtensions.GetUserAuth``1(Microsoft.AspNetCore.Http.IHttpContextAccessor,System.String)">
            <summary>
            转换授权对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="contextAccessor"></param>
            <param name="userAuthKey"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.AttributeSdk.UserAuthExtensions.GetAllowAuthorizeAttribute(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
            <summary>
            获取允许用户授权范围特性
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Com.GleekFramework.AttributeSdk.AttributeHostingExtensions">
            <summary>
            Web主题拓展类
            </summary>
        </member>
        <member name="M:Com.GleekFramework.AttributeSdk.AttributeHostingExtensions.UseGleekConsumerHostDefaults(Microsoft.Extensions.Hosting.IHostBuilder)">
            <summary>
            使用默认的消费者主机
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.AttributeSdk.AttributeHostingExtensions.UseGleekWebHostDefaults``1(Microsoft.Extensions.Hosting.IHostBuilder)">
            <summary>
            使用默认的Web主机
            </summary>
            <typeparam name="Startup"></typeparam>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.AttributeSdk.AttributeHostingExtensions.UseHealthChecks(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Func{System.String})">
            <summary>
            使用心跳检测
            </summary>
            <param name="builder"></param>
            <param name="callback">输出的内容(默认为：ok)</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.AttributeSdk.AttributeHostingExtensions.AddGlobalAttribute``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加全局过滤器
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.AttributeSdk.AttributeHostingExtensions.AddGlobalExceptionAttribute(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加全局异常
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.AttributeSdk.AttributeHostingExtensions.AddModelValidAttribute``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加模型验证
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.AttributeSdk.AttributeHostingExtensions.AddNewtonsoftJson(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加默认的JSON配置参数
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:Com.GleekFramework.AttributeSdk.NLogMiddleware">
            <summary>
            接口日志收集中间件
            </summary>
        </member>
        <member name="F:Com.GleekFramework.AttributeSdk.NLogMiddleware._next">
            <summary>
            请求管道
            </summary>
        </member>
        <member name="M:Com.GleekFramework.AttributeSdk.NLogMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            构造函数
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:Com.GleekFramework.AttributeSdk.NLogMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            中间件执行方法
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.AttributeSdk.NLogMiddleware.GetResponseBodyJsonStr(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取返回结果的JSON字符串
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.AttributeSdk.NLogMiddleware.ConvertObject(System.String,System.String)">
            <summary>
            转换对象
            </summary>
            <param name="requestJson">请求参数</param>
            <param name="responseJson">返回结果</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.AttributeSdk.NLogMiddleware.GetSerialNo(Microsoft.AspNetCore.Http.IHeaderDictionary,System.Object,System.Object)">
            <summary>
            获取业务流水号
            </summary>
            <param name="headers"></param>
            <param name="request">请求参数</param>
            <param name="response">返回结果的Json字符串</param>
            <returns></returns>
        </member>
        <member name="T:Com.GleekFramework.AttributeSdk.NotEqualAttribute">
            <summary>
            不等于模型验证
            </summary>
        </member>
        <member name="F:Com.GleekFramework.AttributeSdk.NotEqualAttribute._value">
            <summary>
            
            </summary>
        </member>
        <member name="M:Com.GleekFramework.AttributeSdk.NotEqualAttribute.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Com.GleekFramework.AttributeSdk.NotEqualAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="validationContext"></param>
            <returns></returns>
        </member>
    </members>
</doc>
