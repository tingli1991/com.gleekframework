<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Com.GleekFramework.AppSvc</name>
    </assembly>
    <members>
        <member name="T:Com.GleekFramework.AppSvc.Controllers.KafkaController">
            <summary>
            Kafka测试控制器
            </summary>
        </member>
        <member name="P:Com.GleekFramework.AppSvc.Controllers.KafkaController.SnowflakeService">
            <summary>
            流水号生成器
            </summary>
        </member>
        <member name="P:Com.GleekFramework.AppSvc.Controllers.KafkaController.HttpClientFactory">
            <summary>
            Http客户端工厂类
            </summary>
        </member>
        <member name="P:Com.GleekFramework.AppSvc.Controllers.KafkaController.HttpContextAccessor">
            <summary>
            Http请求上下文
            </summary>
        </member>
        <member name="P:Com.GleekFramework.AppSvc.Controllers.KafkaController.KafkaClientService">
            <summary>
            Kafka客户端服务
            </summary>
        </member>
        <member name="M:Com.GleekFramework.AppSvc.Controllers.KafkaController.TestAsync">
            <summary>
            接口测试
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.GleekFramework.AppSvc.Controllers.QueueController">
            <summary>
            本地队列测试控制器
            </summary>
        </member>
        <member name="P:Com.GleekFramework.AppSvc.Controllers.QueueController.SnowflakeService">
            <summary>
            流水号生成器
            </summary>
        </member>
        <member name="P:Com.GleekFramework.AppSvc.Controllers.QueueController.QueueClientService">
            <summary>
            客户端服务
            </summary>
        </member>
        <member name="M:Com.GleekFramework.AppSvc.Controllers.QueueController.TestAsync">
            <summary>
            生产测试
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.GleekFramework.AppSvc.Controllers.RabbitController">
            <summary>
            RabbitMQ测试控制器
            </summary>
        </member>
        <member name="P:Com.GleekFramework.AppSvc.Controllers.RabbitController.SnowflakeService">
            <summary>
            流水号生成器
            </summary>
        </member>
        <member name="P:Com.GleekFramework.AppSvc.Controllers.RabbitController.HttpClientFactory">
            <summary>
            Http客户端工厂类
            </summary>
        </member>
        <member name="P:Com.GleekFramework.AppSvc.Controllers.RabbitController.HttpContextAccessor">
            <summary>
            Http请求上下文
            </summary>
        </member>
        <member name="P:Com.GleekFramework.AppSvc.Controllers.RabbitController.RabbitRpcClientService">
            <summary>
            RPC客户端服务
            </summary>
        </member>
        <member name="M:Com.GleekFramework.AppSvc.Controllers.RabbitController.RpcAsync">
            <summary>
            RPC测试
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.GleekFramework.AppSvc.Controllers.StackController">
            <summary>
            本地栈测试控制器
            </summary>
        </member>
        <member name="P:Com.GleekFramework.AppSvc.Controllers.StackController.SnowflakeService">
            <summary>
            流水号生成器
            </summary>
        </member>
        <member name="P:Com.GleekFramework.AppSvc.Controllers.StackController.StackClientService">
            <summary>
            客户端服务
            </summary>
        </member>
        <member name="M:Com.GleekFramework.AppSvc.Controllers.StackController.TestAsync">
            <summary>
            生产测试
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.GleekFramework.AppSvc.Controllers.WeatherForecastController">
            <summary>
            天气预报控制器
            </summary>
        </member>
        <member name="P:Com.GleekFramework.AppSvc.Controllers.WeatherForecastController.Summaries">
            <summary>
            注入配置信息
            </summary>
        </member>
        <member name="P:Com.GleekFramework.AppSvc.Controllers.WeatherForecastController.ConfitOptions">
            <summary>
            测试配置
            </summary>
        </member>
        <member name="P:Com.GleekFramework.AppSvc.Controllers.WeatherForecastController.DependencyService">
            <summary>
            测试依赖注入
            </summary>
        </member>
        <member name="M:Com.GleekFramework.AppSvc.Controllers.WeatherForecastController.AddAsync(Com.GleekFramework.Models.WeatherForecastParam)">
            <summary>
            新增方法
            </summary>
            <param name="param">请求参数</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.AppSvc.Controllers.WeatherForecastController.GetAsync(System.Int32)">
            <summary>
            获取天气预报
            </summary>
            <param name="id">id(用于测试字段必填)</param>
            <returns></returns>
        </member>
        <member name="T:Com.GleekFramework.AppSvc.QueueCustomerHandler">
            <summary>
            自定义队列消费处理类
            </summary>
        </member>
        <member name="P:Com.GleekFramework.AppSvc.QueueCustomerHandler.ActionKey">
            <summary>
            方法名称
            </summary>
        </member>
        <member name="M:Com.GleekFramework.AppSvc.QueueCustomerHandler.ExecuteAsync(Com.GleekFramework.ContractSdk.MessageBody)">
            <summary>
            执行方法
            </summary>
            <param name="messageBody"></param>
            <returns></returns>
        </member>
        <member name="T:Com.GleekFramework.AppSvc.QueueDefaultHandler">
            <summary>
            默认队列消费处理类
            </summary>
        </member>
        <member name="P:Com.GleekFramework.AppSvc.QueueDefaultHandler.ActionKey">
            <summary>
            方法名称
            </summary>
        </member>
        <member name="M:Com.GleekFramework.AppSvc.QueueDefaultHandler.ExecuteAsync(Com.GleekFramework.ContractSdk.MessageBody)">
            <summary>
            执行方法
            </summary>
            <param name="messageBody"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Com.GleekFramework.AppSvc.StackCustomerHandler">
            <summary>
            自定义栈消费处理类
            </summary>
        </member>
        <member name="P:Com.GleekFramework.AppSvc.StackCustomerHandler.ActionKey">
            <summary>
            方法名称
            </summary>
        </member>
        <member name="M:Com.GleekFramework.AppSvc.StackCustomerHandler.ExecuteAsync(Com.GleekFramework.ContractSdk.MessageBody)">
            <summary>
            执行方法
            </summary>
            <param name="messageBody"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Com.GleekFramework.AppSvc.StackDefaultHandler">
            <summary>
            默认栈消费处理类
            </summary>
        </member>
        <member name="P:Com.GleekFramework.AppSvc.StackDefaultHandler.ActionKey">
            <summary>
            方法名称
            </summary>
        </member>
        <member name="M:Com.GleekFramework.AppSvc.StackDefaultHandler.ExecuteAsync(Com.GleekFramework.ContractSdk.MessageBody)">
            <summary>
            执行方法
            </summary>
            <param name="messageBody"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Com.GleekFramework.AppSvc.Program">
            <summary>
            程序类
            </summary>
        </member>
        <member name="M:Com.GleekFramework.AppSvc.Program.Main(System.String[])">
            <summary>
            程序主函数
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Com.GleekFramework.AppSvc.Program.CreateDefaultHostBuilder(System.String[])">
            <summary>
            创建系统主机
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
    </members>
</doc>
