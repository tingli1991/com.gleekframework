<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Com.GleekFramework.DapperSdk</name>
    </assembly>
    <members>
        <member name="T:Com.GleekFramework.DapperSdk.DapperConstant">
            <summary>
            Dapper常量
            </summary>
        </member>
        <member name="F:Com.GleekFramework.DapperSdk.DapperConstant.DEFAULT_TIMEOUT_SECONDS">
            <summary>
            数据库访问超市时间的秒数
            </summary>
        </member>
        <member name="F:Com.GleekFramework.DapperSdk.DapperConstant.DEFAULT_MSSQL_CONNECTION_NAME">
            <summary>
            MSSQL默认的链接字符串名称
            </summary>
        </member>
        <member name="F:Com.GleekFramework.DapperSdk.DapperConstant.DEFAULT_MYSQL_CONNECTION_NAME">
            <summary>
            MYSQL默认的链接字符串名称
            </summary>
        </member>
        <member name="F:Com.GleekFramework.DapperSdk.DapperConstant.DEFAULT_PGSQL_CONNECTION_NAME">
            <summary>
            PGSQL默认的链接字符串名称
            </summary>
        </member>
        <member name="F:Com.GleekFramework.DapperSdk.DapperConstant.DEFAULT_SQLLITE_CONNECTION_NAME">
            <summary>
            SQLLITE默认的链接字符串名称
            </summary>
        </member>
        <member name="F:Com.GleekFramework.DapperSdk.DapperConstant.DEFAULT_ORACLE_CONNECTION_NAME">
            <summary>
            ORACLEE默认的链接字符串名称
            </summary>
        </member>
        <member name="T:Com.GleekFramework.DapperSdk.OrderExpressionConverter`1">
            <summary>
            排序表达式转换类
            </summary>
            <typeparam name="TEntity">查询的实体类型</typeparam>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.OrderExpressionConverter`1.Convert(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            转换方法
            </summary>
            <param name="orderDic"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.OrderExpressionConverter`1.ParseSortDirection(System.String)">
            <summary>
            解析排序的方向
            </summary>
            <param name="direction"></param>
            <returns>是否为升序，true：升序，false：降序</returns>
        </member>
        <member name="T:Com.GleekFramework.DapperSdk.QueryableBuilder`1">
            <summary>
             查询构建器，支持条件过滤、排序和分页功能
            </summary>
            <typeparam name="TEntity">查询的实体类型</typeparam>
        </member>
        <member name="T:Com.GleekFramework.DapperSdk.QueryableBuilder`2">
            <summary>
             查询构建器，支持条件过滤、排序和分页功能
            </summary>
            <typeparam name="TEntity">查询的实体类型</typeparam>
            <typeparam name="TResult">返回的实体类型</typeparam>
        </member>
        <member name="F:Com.GleekFramework.DapperSdk.QueryableBuilder`2.CountSQL">
            <summary>
            Count执行脚本
            </summary>
        </member>
        <member name="F:Com.GleekFramework.DapperSdk.QueryableBuilder`2.ExecuteSQL">
            <summary>
            SQL执行脚本
            </summary>
        </member>
        <member name="P:Com.GleekFramework.DapperSdk.QueryableBuilder`2.EntityType">
            <summary>
            查询的实体类型
            </summary>
        </member>
        <member name="P:Com.GleekFramework.DapperSdk.QueryableBuilder`2.TakeCount">
            <summary>
            要取的元素数量
            </summary>
        </member>
        <member name="P:Com.GleekFramework.DapperSdk.QueryableBuilder`2.SkipCount">
            <summary>
            要跳过的元素数量
            </summary>
        </member>
        <member name="F:Com.GleekFramework.DapperSdk.QueryableBuilder`2.Parameters">
            <summary>
            SQL参数列表
            </summary>
        </member>
        <member name="F:Com.GleekFramework.DapperSdk.QueryableBuilder`2.FilterExpression">
            <summary>
            存储过滤条件表达式
            </summary>
        </member>
        <member name="F:Com.GleekFramework.DapperSdk.QueryableBuilder`2.OrderExpressions">
            <summary>
            存储排序表达式和排序方向（升序或降序）
            </summary>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.QueryableBuilder`2.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.QueryableBuilder`2.Skip(System.Int64)">
            <summary>
            跳过序列中指定数量的元素
            </summary>
            <param name="count">要跳过的元素数量</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.QueryableBuilder`2.Take(System.Int64)">
            <summary>
            从序列中取指定数量的连续元素
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.QueryableBuilder`2.Page(System.Int64,System.Int64)">
            <summary>
            设置分页参数
            </summary>
            <param name="pageIndex">页码</param>
            <param name="pageSize">分页大小</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.QueryableBuilder`2.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            添加过滤条件
            </summary>
            <param name="predicate">过滤条件的Lambda表达式</param>
            <returns>当前查询构建器实例</returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.QueryableBuilder`2.WhereIf(System.Boolean,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            添加过滤条件
            </summary>
            <param name="condition">条件</param>
            <param name="predicate">过滤条件的Lambda表达式</param>
            <returns>当前查询构建器实例</returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.QueryableBuilder`2.Order(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            排序
            </summary>
            <param name="orderDic">排序规则字典</param>
            <returns>当前查询构建器实例。</returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.QueryableBuilder`2.OrderBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            添加升序条件
            </summary>
            <typeparam name="TKey">排序字段的类型</typeparam>
            <param name="orderExpression">排序字段的Lambda表达式</param>
            <returns>当前查询构建器实例。</returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.QueryableBuilder`2.OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            添加降序条件
            </summary>
            <typeparam name="TKey">排序字段的类型</typeparam>
            <param name="keySelector">排序字段的Lambda表达式</param>
            <returns>当前查询构建器实例。</returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.QueryableBuilder`2.Build(Com.GleekFramework.ContractSdk.DatabaseType)">
            <summary>
            构建SQL脚本
            </summary>
            <param name="databaseType">数据库类型</param>
        </member>
        <member name="T:Com.GleekFramework.DapperSdk.SqlBuilder`1">
            <summary>
            SQL构建器
            </summary>
            <typeparam name="E">新实体类型</typeparam>
        </member>
        <member name="F:Com.GleekFramework.DapperSdk.SqlBuilder`1.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="F:Com.GleekFramework.DapperSdk.SqlBuilder`1.TableName">
            <summary>
            数据库名称
            </summary>
        </member>
        <member name="F:Com.GleekFramework.DapperSdk.SqlBuilder`1.KeyPropertyInfo">
            <summary>
            主键属性信息
            </summary>
        </member>
        <member name="F:Com.GleekFramework.DapperSdk.SqlBuilder`1.PropertyInfoList">
            <summary>
            属性列表
            </summary>
        </member>
        <member name="F:Com.GleekFramework.DapperSdk.SqlBuilder`1.ColumnMappingList">
            <summary>
            属性的映射关系列表
            </summary>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.SqlBuilder`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.SqlBuilder`1.GenInsertSQL">
            <summary>
            编译插入脚本
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.SqlBuilder`1.GenQuerySQL">
            <summary>
            生成查询SQL脚本
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.SqlBuilder`1.GenUpdateSQL``1(`0,System.Int64)">
            <summary>
            生成更新SQL脚本
            </summary>
            <typeparam name="T">返回实体</typeparam>
            <param name="entity">更新实体</param>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.SqlBuilder`1.GenUpdateSQL">
            <summary>
            生成更新SQL脚本
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.SqlBuilder`1.GenUpdateSQL(System.Reflection.PropertyInfo)">
            <summary>
            生成更新SQL脚本
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.SqlBuilder`1.GenDeleteSQL">
            <summary>
            生成删除SQL脚本
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.SqlBuilder`1.GetIdentitySQL(Com.GleekFramework.ContractSdk.DatabaseType)">
            <summary>
            生成获取主键Id返回值的查询脚本
            </summary>
            <param name="databaseType">数据库类型</param>
            <returns></returns>
        </member>
        <member name="T:Com.GleekFramework.DapperSdk.OrderExpressionVisitor">
            <summary>
            排序表达式访问器
            </summary>
        </member>
        <member name="F:Com.GleekFramework.DapperSdk.OrderExpressionVisitor._orderClause">
            <summary>
            排序
            </summary>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.OrderExpressionVisitor.GetOrderClause">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.OrderExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>
            访问成员表达式
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:Com.GleekFramework.DapperSdk.SelectExpressionVisitor`2">
            <summary>
            SELECT访问器
            </summary>
            <typeparam name="TEntity">查询的实体类型</typeparam>
            <typeparam name="TResult">返回的实体类型</typeparam>
        </member>
        <member name="F:Com.GleekFramework.DapperSdk.SelectExpressionVisitor`2.Columns">
            <summary>
            需要查询显示的列
            </summary>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.SelectExpressionVisitor`2.GetSelectColumns">
            <summary>
            获取SELECT的显示列脚本
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.SelectExpressionVisitor`2.Visit">
            <summary>
            访问成员表达式
            </summary>
        </member>
        <member name="T:Com.GleekFramework.DapperSdk.WhereExpressionVisitor">
            <summary>
            WHERE条件表达式访问器，用于将Lambda表达式转换为SQL条件
            </summary>
        </member>
        <member name="F:Com.GleekFramework.DapperSdk.WhereExpressionVisitor.ParamCounter">
            <summary>
            参数计数器
            </summary>
        </member>
        <member name="F:Com.GleekFramework.DapperSdk.WhereExpressionVisitor.WhereClause">
            <summary>
            WHERE子句
            </summary>
        </member>
        <member name="F:Com.GleekFramework.DapperSdk.WhereExpressionVisitor.Parameters">
            <summary>
            SQL参数
            </summary>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.WhereExpressionVisitor.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            构造函数
            </summary>
            <param name="parameters">SQL参数</param>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.WhereExpressionVisitor.GetWhereClause">
            <summary>
            获取生成的WHERE子句
            </summary>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.WhereExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
            处理一元运算符
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.WhereExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            访问方法调用表达式
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.WhereExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
            访问二元表达式
            </summary>
            <param name="expression">表达式</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.WhereExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>
            访问成员表达式
            </summary>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.WhereExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
            访问常量表达式
            </summary>
        </member>
        <member name="T:Com.GleekFramework.DapperSdk.SQLExpressionExtensions">
            <summary>
            SQL表达式拓展类
            </summary>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.SQLExpressionExtensions.IsNeedParenthesis(System.Linq.Expressions.BinaryExpression,System.Linq.Expressions.Expression)">
            <summary>
            判断子表达式是否需要括号包裹
            </summary>
            <param name="parent">父级表达式</param>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.SQLExpressionExtensions.GetPrecedence(System.Linq.Expressions.ExpressionType)">
            <summary>
            获取表达式类型的运算符优先级（数值越大优先级越高）
            <para>优先级规则参考标准SQL运算符优先级设计：</para>
            <list type="bullet">
            <item>1. 算术运算符 > 比较运算符 > 逻辑运算符</item>
            <item>2. 同级运算符按标准优先级处理（如 AND 高于 OR）</item>
            <item>3. 未明确列出的运算符默认优先级最低</item>
            </list>
            </summary>
            <param name="nodeType">表达式节点类型</param>
            <returns>优先级数值（0表示最低优先级）</returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.SQLExpressionExtensions.GetColumnName(System.Linq.Expressions.MemberExpression)">
            <summary>
            获取列名称
            </summary>
            <param name="memberExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.SQLExpressionExtensions.ToOperator(System.Linq.Expressions.BinaryExpression)">
            <summary>
            转换成操作类型
            </summary>
            <param name="binaryExpression"></param>
            <returns></returns>
        </member>
        <member name="T:Com.GleekFramework.DapperSdk.TablePropertyExtensions">
            <summary>
            表的属性拓展
            </summary>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.TablePropertyExtensions.GetColumnIgnoreDic(System.Type)">
            <summary>
            获取所有被忽略的列字典
            </summary>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.TablePropertyExtensions.GetAllColumnDic(System.Type)">
            <summary>
            获取指定类型的所有列字典
            </summary>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.TablePropertyExtensions.GetPrimaryName(System.Type)">
            <summary>
            获取主键字段名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.TablePropertyExtensions.GetPrimaryName``1(``0)">
            <summary>
            获取主键字段名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.TablePropertyExtensions.GetTableName(System.Type)">
            <summary>
            实际应根据自定义属性获取表名
            </summary>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.TablePropertyExtensions.GetTableName``1(``0)">
            <summary>
            获取表名
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.GleekFramework.DapperSdk.WhereMethodCallExtensions">
            <summary>
            WHERE方法条件表达式拓展类
            </summary>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.WhereMethodCallExtensions.GetMemberValue(System.Linq.Expressions.MemberExpression)">
            <summary>
            获取成员值
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.WhereMethodCallExtensions.HandlerWhereValues(System.Linq.Expressions.MethodCallExpression,System.Collections.Generic.Dictionary{System.String,System.Object},System.Int64@,System.Boolean)">
            <summary>
            处理方法条件查询条件
            </summary>
            <param name="expression">方法访问器</param>
            <param name="parameters">请求参数</param>
            <param name="paramCounter">参数计数器</param>
            <param name="isUnary">是否来源于一元运算符的计算入口</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.WhereMethodCallExtensions.HandleEnumCollectionValues(System.Collections.Generic.Dictionary{System.String,System.Object},System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.Enum},System.Int64@)">
            <summary>
            处理枚举类型参数(非字符串类型)
            </summary>
            <param name="parameters">查询参数</param>
            <param name="paramCounter">参数计数器</param>
            <param name="builder">查询条件</param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.WhereMethodCallExtensions.HandleDefaultCollectionValues(System.Collections.Generic.Dictionary{System.String,System.Object},System.Text.StringBuilder,System.Collections.IEnumerable,System.Int64@)">
            <summary>
            处理枚集合型参数
            </summary>
            <param name="parameters">查询参数</param>
            <param name="paramCounter">参数计数器</param>
            <param name="builder">查询条件</param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.WhereMethodCallExtensions.AppendCollectionParameters``1(System.Collections.Generic.Dictionary{System.String,System.Object},System.Text.StringBuilder,System.Collections.Generic.IEnumerable{``0},System.Int64@)">
            <summary>
            追加参数(非字符串类型)
            </summary>
            <param name="parameters">查询参数</param>
            <param name="paramCounter">参数计数器</param>
            <param name="builder">查询条件</param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.WhereMethodCallExtensions.GetMemberValue(System.Linq.Expressions.MemberExpression,System.Object)">
            <summary>
            获取成员值
            </summary>
            <param name="node"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.WhereMethodCallExtensions.GetClosureInstance(System.Linq.Expressions.Expression)">
            <summary>
            获取闭包实例
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="T:Com.GleekFramework.DapperSdk.DapperHostingExtensions">
            <summary>
            Dapper仓储拓展类
            </summary>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperHostingExtensions.UseDapper(Microsoft.Extensions.Hosting.IHostBuilder,System.String[])">
            <summary>
            使用Dapper
            </summary>
            <param name="builder"></param>
            <param name="connectionNames">连接名称列表</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperHostingExtensions.UseDapper(Microsoft.Extensions.Hosting.IHostBuilder,Microsoft.Extensions.Configuration.IConfiguration,System.String[])">
            <summary>
            使用Dapper
            </summary>
            <param name="builder"></param>
            <param name="configuration">配置对象</param>
            <param name="connectionNames">连接名称列表</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperHostingExtensions.UseDapper(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.String[])">
            <summary>
            使用Dapper
            </summary>
            <param name="services"></param>
            <param name="configuration">配置对象</param>
            <param name="connectionNames">连接名称列表</param>
            <returns></returns>
        </member>
        <member name="T:Com.GleekFramework.DapperSdk.MapperHostingExtensions">
            <summary>
            字段映射工具拓展类
            </summary>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.MapperHostingExtensions.UseDapperColumnMap(Microsoft.Extensions.Hosting.IHostBuilder,System.String[])">
            <summary>
            使用Dapper字段映射
            </summary>
            <param name="builder"></param>
            <param name="assemblyNameList">命名空间名称列表</param>
        </member>
        <member name="T:Com.GleekFramework.DapperSdk.ColumnTypeMapper">
            <summary>
            列的类型映射
            </summary>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.ColumnTypeMapper.#ctor(System.Type)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:Com.GleekFramework.DapperSdk.FallbackTypeMapper">
            <summary>
            
            </summary>
        </member>
        <member name="F:Com.GleekFramework.DapperSdk.FallbackTypeMapper._mappers">
            <summary>
            映射关系
            </summary>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.FallbackTypeMapper.#ctor(System.Collections.Generic.IEnumerable{Dapper.SqlMapper.ITypeMap})">
            <summary>
            构造函数
            </summary>
            <param name="mappers"></param>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.FallbackTypeMapper.FindConstructor(System.String[],System.Type[])">
            <summary>
            
            </summary>
            <param name="names"></param>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.FallbackTypeMapper.GetConstructorParameter(System.Reflection.ConstructorInfo,System.String)">
            <summary>
            
            </summary>
            <param name="constructor"></param>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.FallbackTypeMapper.GetMember(System.String)">
            <summary>
            
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.FallbackTypeMapper.FindExplicitConstructor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.GleekFramework.DapperSdk.RepositoryProvider">
            <summary>
            Dapper仓储实现类
            </summary>
        </member>
        <member name="F:Com.GleekFramework.DapperSdk.RepositoryProvider.lock">
            <summary>
            对象锁
            </summary>
        </member>
        <member name="F:Com.GleekFramework.DapperSdk.RepositoryProvider.ConnectionStrCache">
            <summary>
            连接字符串字典缓存
            </summary>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.RepositoryProvider.GetConnectionString(System.String)">
            <summary>
            获取连接字符串
            </summary>
            <param name="connectionName">连接字符串名称</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.RepositoryProvider.RegisterConnectionStrings(Microsoft.Extensions.Configuration.IConfiguration,System.String[])">
            <summary>
            注册数据库连接字符串
            </summary>
            <param name="configuration">配置对象</param>
            <param name="connectionNames">连接字符串名称</param>
        </member>
        <member name="T:Com.GleekFramework.DapperSdk.DapperRepository">
            <summary>
            Dapper基础仓库
            </summary>
        </member>
        <member name="P:Com.GleekFramework.DapperSdk.DapperRepository.ConnectionName">
            <summary>
            配置文件名称
            </summary>
        </member>
        <member name="P:Com.GleekFramework.DapperSdk.DapperRepository.DatabaseType">
            <summary>
            数据库类型枚举
            </summary>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.GetConnection">
            <summary>
            获取并打开连接字符串对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:Com.GleekFramework.DapperSdk.DapperRepository.SnowflakeService">
            <summary>
            流水号生成服务
            </summary>
        </member>
        <member name="P:Com.GleekFramework.DapperSdk.DapperRepository.ConnectionString">
            <summary>
            获取连接字符串
            </summary>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.Open``1(System.Func{System.Data.IDbConnection,``0})">
            <summary>
            执行方法
            </summary>
            <typeparam name="T"></typeparam>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.OpenAsync``1(System.Func{System.Data.IDbConnection,System.Threading.Tasks.Task{``0}})">
            <summary>
            执行方法
            </summary>
            <typeparam name="T"></typeparam>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.GetFirstOrDefault``1(System.String,System.Object,System.Int32)">
            <summary>
            获取单条记录信息
            </summary>
            <typeparam name="T">返回结果</typeparam>
            <param name="sql">sql语句</param>
            <param name="param">参数对象</param>
            <param name="timeoutSeconds">超时时间(单位：秒)</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.GetFirstOrDefault``1(Com.GleekFramework.DapperSdk.QueryableBuilder{``0},System.Int32)">
            <summary>
            获取单条记录信息
            </summary>
            <typeparam name="T">返回结果</typeparam>
            <param name="query">查询构造器</param>
            <param name="timeoutSeconds">超时时间(单位：秒)</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.GetFirstOrDefault``2(Com.GleekFramework.DapperSdk.QueryableBuilder{``0,``1},System.Int32)">
            <summary>
            获取单条记录信息
            </summary>
            <typeparam name="E"></typeparam>
            <typeparam name="T">返回结果</typeparam>
            <param name="query">查询构造器</param>
            <param name="timeoutSeconds">超时时间(单位：秒)</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.GetFirstOrDefaultAsync``1(System.String,System.Object,System.Int32)">
            <summary>
            获取单条记录信息
            </summary>
            <typeparam name="T">返回结果</typeparam>
            <param name="sql">sql语句</param>
            <param name="param">参数对象</param>
            <param name="timeoutSeconds">超时时间(单位：秒)</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.GetFirstOrDefaultAsync``1(Com.GleekFramework.DapperSdk.QueryableBuilder{``0},System.Int32)">
            <summary>
            获取单条记录信息
            </summary>
            <typeparam name="T">返回结果</typeparam>
            <param name="query">查询构造器</param>
            <param name="timeoutSeconds">超时时间(单位：秒)</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.GetFirstOrDefaultAsync``2(Com.GleekFramework.DapperSdk.QueryableBuilder{``0,``1},System.Int32)">
            <summary>
            获取单条记录信息
            </summary>
            <typeparam name="E">实体模型</typeparam>
            <typeparam name="T">返回结果</typeparam>
            <param name="query">查询构造器</param>
            <param name="timeoutSeconds">超时时间(单位：秒)</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.GetList``1(System.String,System.Object,System.Int32)">
            <summary>
            获取列表
            </summary>
            <typeparam name="T">返回结果</typeparam>
            <param name="sql">sql语句</param>
            <param name="param">参数对象</param>
            <param name="timeoutSeconds">超时时间(单位：秒)</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.GetList``1(Com.GleekFramework.DapperSdk.QueryableBuilder{``0},System.Int32)">
            <summary>
            获取列表
            </summary>
            <typeparam name="T">返回结果</typeparam>
            <param name="query">查询构造器</param>
            <param name="timeoutSeconds">超时时间(单位：秒)</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.GetList``2(Com.GleekFramework.DapperSdk.QueryableBuilder{``0,``1},System.Int32)">
            <summary>
            获取列表
            </summary>
            <typeparam name="E">实体模型</typeparam>
            <typeparam name="T">返回结果</typeparam>
            <param name="query">查询构造器</param>
            <param name="timeoutSeconds">超时时间(单位：秒)</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.GetListAsync``1(System.String,System.Object,System.Int32)">
            <summary>
            获取列表
            </summary>
            <typeparam name="T">返回结果</typeparam>
            <param name="sql">sql语句</param>
            <param name="param">参数对象</param>
            <param name="timeoutSeconds">超时时间(单位：秒)</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.GetListAsync``1(Com.GleekFramework.DapperSdk.QueryableBuilder{``0},System.Int32)">
            <summary>
            获取列表
            </summary>
            <typeparam name="T">返回结果</typeparam>
            <param name="query">查询构造器</param>
            <param name="timeoutSeconds">超时时间(单位：秒)</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.GetListAsync``2(Com.GleekFramework.DapperSdk.QueryableBuilder{``0,``1},System.Int32)">
            <summary>
            获取列表
            </summary>
            <typeparam name="E">实体模型</typeparam>
            <typeparam name="T">返回结果</typeparam>
            <param name="query">查询构造器</param>
            <param name="timeoutSeconds">超时时间(单位：秒)</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.GetPageList``1(Com.GleekFramework.DapperSdk.QueryableBuilder{``0},System.Int64,System.Int64,System.Int32)">
            <summary>
            获取分页列表
            </summary>
            <param name="query">查询构造器</param>
            <param name="pageIndex">页码</param>
            <param name="pageSize">分页大小</param>
            <param name="timeoutSeconds">超时时间(单位：秒)</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.GetPageList``2(Com.GleekFramework.DapperSdk.QueryableBuilder{``0,``1},System.Int64,System.Int64,System.Int32)">
            <summary>
            获取分页列表
            </summary>
            <typeparam name="E"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="query">查询构造器</param>
            <param name="pageIndex">页码</param>
            <param name="pageSize">分页大小</param>
            <param name="timeoutSeconds">超时时间(单位：秒)</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.GetPageListAsync``1(Com.GleekFramework.DapperSdk.QueryableBuilder{``0},System.Int64,System.Int64,System.Int32)">
            <summary>
            获取分页列表
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query">查询构造器</param>
            <param name="pageIndex">页码</param>
            <param name="pageSize">分页大小</param>
            <param name="timeoutSeconds">超时时间(单位：秒)</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.GetPageListAsync``2(Com.GleekFramework.DapperSdk.QueryableBuilder{``0,``1},System.Int64,System.Int64,System.Int32)">
            <summary>
            获取分页列表
            </summary>
            <typeparam name="E"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="query">查询构造器</param>
            <param name="pageIndex">页码</param>
            <param name="pageSize">分页大小</param>
            <param name="timeoutSeconds">超时时间(单位：秒)</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.Insert``1(``0,System.Int32)">
            <summary>
            插入单条数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <param name="timeoutSeconds"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.InsertMany``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            插入单条数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entitys"></param>
            <param name="pageSize">分页大小</param>
            <param name="timeoutSeconds">超时时间</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.InsertAsync``1(``0,System.Int32)">
            <summary>
            插入单条数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <param name="timeoutSeconds"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.InsertManyAsync``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            插入单条数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entitys"></param>
            <param name="pageSize"></param>
            <param name="timeoutSeconds"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.Update``1(``0,System.Int32)">
            <summary>
            更新单条数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <param name="timeoutSeconds"></param>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.Update``2(``0,System.Int32)">
            <summary>
            更新单条数据
            </summary>
            <typeparam name="E">更新的实体</typeparam>
            <typeparam name="T">返回的实体</typeparam>
            <param name="entity"></param>
            <param name="timeoutSeconds"></param>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.Update``2(System.Int64,``0,System.Int32)">
            <summary>
            更新单条数据
            </summary>
            <param name="id">主键Id</param>
            <typeparam name="E">更新的实体</typeparam>
            <typeparam name="T">返回的实体</typeparam>
            <param name="entity"></param>
            <param name="timeoutSeconds"></param>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.UpdateMany``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            更新多条数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entitys"></param>
            <param name="pageSize"></param>
            <param name="timeoutSeconds"></param>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.UpdateAsync``1(``0,System.Int32)">
            <summary>
            更新单条数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <param name="timeoutSeconds"></param>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.UpdateAsync``2(``0,System.Int32)">
            <summary>
            更新单条数据
            </summary>
            <typeparam name="E"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <param name="timeoutSeconds"></param>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.UpdateAsync``2(System.Int64,``0,System.Int32)">
            <summary>
            更新单条数据
            </summary>
            <param name="id">主键</param>
            <typeparam name="E"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <param name="timeoutSeconds">超时时间</param>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.UpdateManyAsync``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            更新多条数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entitys"></param>
            <param name="pageSize"></param>
            <param name="timeoutSeconds"></param>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.Delete``1(``0,System.Int32)">
            <summary>
            删除单条数据
            </summary>
            <param name="entity"></param>
            <param name="timeoutSeconds"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.DeleteMany``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            删除多条数据
            </summary>
            <param name="entitys"></param>
            <param name="pageSize"></param>
            <param name="timeoutSeconds"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.DeleteAsync``1(``0,System.Int32)">
            <summary>
            删除单条数据
            </summary>
            <param name="entity"></param>
            <param name="timeoutSeconds"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.DeleteManyAsync``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            删除多条数据
            </summary>
            <param name="entitys"></param>
            <param name="pageSize"></param>
            <param name="timeoutSeconds"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.Execute(System.String,System.Object,System.Int32)">
            <summary>
            数据库操作执行方法（不带事务处理）
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="timeoutSeconds">超时时间(单位：秒)</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.ExecuteAsync(System.String,System.Object,System.Int32)">
            <summary>
            数据库操作执行方法（不带事务处理）
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="timeoutSeconds">超时时间(单位：秒)</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.Execute``1(System.String,System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            数据库操作执行方法（不带事务处理）
            </summary>
            <param name="sql"></param>
            <param name="paramters"></param>
            <param name="pageSize">分页大小</param>
            <param name="timeoutSeconds">超时时间(单位：秒)</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.ExecuteAsync``1(System.String,System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            数据库操作执行方法（不带事务处理）
            </summary>
            <param name="sql"></param>
            <param name="paramters"></param>
            <param name="pageSize">分页大小</param>
            <param name="timeoutSeconds">超时时间(单位：秒)</param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.ExecuteScalar``1(System.String,System.Object,System.Int32)">
            <summary>
            数据库操作执行方法（不带事务处理）
            </summary>
            <typeparam name="T">指定返回的对象</typeparam>
            <param name="sql">sql脚本</param>
            <param name="param">sql脚本对应的参数</param>
            <param name="timeoutSeconds"></param>
            <returns></returns>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.DapperRepository.ExecuteScalarAsync``1(System.String,System.Object,System.Int32)">
            <summary>
            数据库操作执行方法（不带事务处理）
            </summary>
            <typeparam name="T">指定返回的对象</typeparam>
            <param name="sql">sql脚本</param>
            <param name="param">sql脚本对应的参数</param>
            <param name="timeoutSeconds"></param>
            <returns></returns>
        </member>
        <member name="T:Com.GleekFramework.DapperSdk.MsSqlRepository">
            <summary>
            MsSql仓储服务
            </summary>
        </member>
        <member name="P:Com.GleekFramework.DapperSdk.MsSqlRepository.DatabaseType">
            <summary>
            MsSQL
            </summary>
        </member>
        <member name="P:Com.GleekFramework.DapperSdk.MsSqlRepository.ConnectionName">
            <summary>
            配置文件名称
            </summary>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.MsSqlRepository.GetConnection">
            <summary>
            获取连接对象
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Com.GleekFramework.DapperSdk.MySqlRepository">
            <summary>
            MySql仓储服务
            </summary>
        </member>
        <member name="P:Com.GleekFramework.DapperSdk.MySqlRepository.DatabaseType">
            <summary>
            MySQL
            </summary>
        </member>
        <member name="P:Com.GleekFramework.DapperSdk.MySqlRepository.ConnectionName">
            <summary>
            配置文件名称
            </summary>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.MySqlRepository.GetConnection">
            <summary>
            获取连接对象
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Com.GleekFramework.DapperSdk.PgSqlRepository">
            <summary>
            PgSQL数据仓储
            连接字符串格式：User ID=postgres;Password=postgres;Host=localhost;Port=5432;Database=postgres;
            </summary>
        </member>
        <member name="P:Com.GleekFramework.DapperSdk.PgSqlRepository.DatabaseType">
            <summary>
            PgSQL
            </summary>
        </member>
        <member name="P:Com.GleekFramework.DapperSdk.PgSqlRepository.ConnectionName">
            <summary>
            配置文件名称
            </summary>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.PgSqlRepository.GetConnection">
            <summary>
            获取连接对象
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Com.GleekFramework.DapperSdk.SQLiteRepository">
            <summary>
            SQLite数据仓储
            </summary>
        </member>
        <member name="P:Com.GleekFramework.DapperSdk.SQLiteRepository.DatabaseType">
            <summary>
            SQLite
            </summary>
        </member>
        <member name="P:Com.GleekFramework.DapperSdk.SQLiteRepository.ConnectionName">
            <summary>
            配置文件名称
            </summary>
        </member>
        <member name="M:Com.GleekFramework.DapperSdk.SQLiteRepository.GetConnection">
            <summary>
            获取连接对象
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
